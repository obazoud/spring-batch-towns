/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/service/ModelGenerator.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.repository;

import java.util.Date;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionParams;
import com.bazoud.springbatch.towns.webapp.util.ValueGenerator;

/**
 * Helper class to create transient entities instance for testing purposes.
 * Simple properties are pre-filled with random values.
 */
@Named
@Singleton
public class BatchJobExecutionParamsGenerator {

    /**
     * Returns a new BatchJobExecutionParams instance filled with random values.
     */
    public BatchJobExecutionParams getBatchJobExecutionParams() {
        BatchJobExecutionParams batchJobExecutionParams = new BatchJobExecutionParams();

        // primary key column must be set manually
        batchJobExecutionParams.setId(ValueGenerator.getUniqueLong());
        // simple attributes follows
        batchJobExecutionParams.setTypeCd("a");
        batchJobExecutionParams.setKeyName("a");
        batchJobExecutionParams.setStringVal("a");
        batchJobExecutionParams.setDateVal(new Date());
        batchJobExecutionParams.setLongVal(1l);
        batchJobExecutionParams.setDoubleVal(1d);
        batchJobExecutionParams.setIdentifying("d");
        // mandatory relation
        BatchJobExecution batchJobExecution = batchJobExecutionGenerator.getBatchJobExecution();
        batchJobExecutionRepository.save(batchJobExecution);
        batchJobExecutionParams.setBatchJobExecution(batchJobExecution);
        return batchJobExecutionParams;
    }

    @Inject
    private BatchJobExecutionRepository batchJobExecutionRepository;
    @Inject
    private BatchJobExecutionGenerator batchJobExecutionGenerator;
}