/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/service/ModelGenerator.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.repository;

import java.util.Date;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchStepExecution;
import com.bazoud.springbatch.towns.webapp.util.ValueGenerator;

/**
 * Helper class to create transient entities instance for testing purposes.
 * Simple properties are pre-filled with random values.
 */
@Named
@Singleton
public class BatchStepExecutionGenerator {

    /**
     * Returns a new BatchStepExecution instance filled with random values.
     */
    public BatchStepExecution getBatchStepExecution() {
        BatchStepExecution batchStepExecution = new BatchStepExecution();

        // primary key column must be set manually
        batchStepExecution.setId(ValueGenerator.getUniqueLong());
        // simple attributes follows
        batchStepExecution.setStepName("a");
        batchStepExecution.setStartTime(new Date());
        batchStepExecution.setEndTime(new Date());
        batchStepExecution.setStatus("a");
        batchStepExecution.setCommitCount(1l);
        batchStepExecution.setReadCount(1l);
        batchStepExecution.setFilterCount(1l);
        batchStepExecution.setWriteCount(1l);
        batchStepExecution.setReadSkipCount(1l);
        batchStepExecution.setWriteSkipCount(1l);
        batchStepExecution.setProcessSkipCount(1l);
        batchStepExecution.setRollbackCount(1l);
        batchStepExecution.setExitCode("a");
        batchStepExecution.setExitMessage("a");
        batchStepExecution.setLastUpdated(new Date());
        // mandatory relation
        BatchJobExecution jobExecution = batchJobExecutionGenerator.getBatchJobExecution();
        batchJobExecutionRepository.save(jobExecution);
        batchStepExecution.setJobExecution(jobExecution);
        return batchStepExecution;
    }

    @Inject
    private BatchJobExecutionRepository batchJobExecutionRepository;
    @Inject
    private BatchJobExecutionGenerator batchJobExecutionGenerator;
}