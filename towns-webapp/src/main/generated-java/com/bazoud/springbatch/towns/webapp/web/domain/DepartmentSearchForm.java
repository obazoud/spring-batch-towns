/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import static com.bazoud.springbatch.towns.webapp.repository.support.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.bazoud.springbatch.towns.webapp.domain.Department;
import com.bazoud.springbatch.towns.webapp.domain.Department_;
import com.bazoud.springbatch.towns.webapp.repository.support.PropertySelector;
import com.bazoud.springbatch.towns.webapp.repository.support.SearchParameters;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericSearchForm;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Department}.
 * It exposes a {@link Department} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class DepartmentSearchForm extends GenericSearchForm<Department, Integer, DepartmentSearchForm> {
    private static final long serialVersionUID = 1L;
    protected Department department = new Department();
    protected PropertySelector<Department, Integer> idSelector = newPropertySelector(Department_.id);
    protected PropertySelector<Department, String> codeSelector = newPropertySelector(Department_.code);
    protected PropertySelector<Department, String> nameSelector = newPropertySelector(Department_.name);
    protected PropertySelector<Department, String> nameUppercaseSelector = newPropertySelector(Department_.nameUppercase);

    public Department getDepartment() {
        return department;
    }

    @Override
    protected Department getEntity() {
        return getDepartment();
    }

    @Override
    public DepartmentSearchForm newInstance() {
        return new DepartmentSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(idSelector, codeSelector, nameSelector, nameUppercaseSelector);
        return sp;
    }

    @Override
    public void resetWithOther(DepartmentSearchForm other) {
        this.department = other.getDepartment();
        this.idSelector = other.getIdSelector();
        this.codeSelector = other.getCodeSelector();
        this.nameSelector = other.getNameSelector();
        this.nameUppercaseSelector = other.getNameUppercaseSelector();
    }

    // Property selectors
    public PropertySelector<Department, Integer> getIdSelector() {
        return idSelector;
    }

    public PropertySelector<Department, String> getCodeSelector() {
        return codeSelector;
    }

    public PropertySelector<Department, String> getNameSelector() {
        return nameSelector;
    }

    public PropertySelector<Department, String> getNameUppercaseSelector() {
        return nameUppercaseSelector;
    }
}
