/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.domain;

import static javax.persistence.FetchType.LAZY;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.MapsId;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.Objects;

@Entity
@Table(name = "BATCH_STEP_EXECUTION_CONTEXT")
public class BatchStepExecutionContext implements Identifiable<Long>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(BatchStepExecutionContext.class);

    // Raw attributes
    private Long id;
    private String shortContext;
    private String serializedContext;

    // One to one
    private BatchStepExecution batchStepExecution;

    // -- [id] ------------------------

    @Override
    @Column(name = "STEP_EXECUTION_ID", precision = 19)
    @Id
    public Long getId() {
        return id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    public BatchStepExecutionContext id(Long id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [shortContext] ------------------------

    @NotEmpty
    @Size(max = 2500)
    @Column(name = "SHORT_CONTEXT", nullable = false, length = 2500)
    public String getShortContext() {
        return shortContext;
    }

    public void setShortContext(String shortContext) {
        this.shortContext = shortContext;
    }

    public BatchStepExecutionContext shortContext(String shortContext) {
        setShortContext(shortContext);
        return this;
    }

    // -- [serializedContext] ------------------------

    @Size(max = 65535)
    @Column(name = "SERIALIZED_CONTEXT", length = 65535)
    public String getSerializedContext() {
        return serializedContext;
    }

    public void setSerializedContext(String serializedContext) {
        this.serializedContext = serializedContext;
    }

    public BatchStepExecutionContext serializedContext(String serializedContext) {
        setSerializedContext(serializedContext);
        return this;
    }

    // -----------------------------------------------------------------
    // One to one
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // Owner side of one-to-one relation: BatchStepExecutionContext.id ==> BatchStepExecution.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    @JoinColumn(name = "STEP_EXECUTION_ID", nullable = false, unique = true)
    @MapsId
    @OneToOne(fetch = LAZY)
    public BatchStepExecution getBatchStepExecution() {
        return batchStepExecution;
    }

    public void setBatchStepExecution(BatchStepExecution batchStepExecution) {
        this.batchStepExecution = batchStepExecution;
    }

    public BatchStepExecutionContext batchStepExecution(BatchStepExecution batchStepExecution) {
        setBatchStepExecution(batchStepExecution);
        return this;
    }

    /**
     * Apply the default values.
     */
    public BatchStepExecutionContext withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof BatchStepExecutionContext && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this BatchStepExecutionContext instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("id", getId()) //
                .add("shortContext", getShortContext()) //
                .add("serializedContext", getSerializedContext()) //
                .toString();
    }
}