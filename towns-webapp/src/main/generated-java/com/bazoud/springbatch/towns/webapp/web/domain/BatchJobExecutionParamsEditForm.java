/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionParams;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionParams_;
import com.bazoud.springbatch.towns.webapp.repository.BatchJobExecutionParamsRepository;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericEditForm;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericToOneAssociation;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * View Helper/Controller to edit {@link BatchJobExecutionParams}.
 */
@Named
@ConversationContextScoped
public class BatchJobExecutionParamsEditForm extends GenericEditForm<BatchJobExecutionParams, Long> {
    @Inject
    protected BatchJobExecutionParamsController batchJobExecutionParamsController;
    @Inject
    protected BatchJobExecutionController batchJobExecutionController;
    protected GenericToOneAssociation<BatchJobExecution, Long> batchJobExecution;

    @Inject
    public BatchJobExecutionParamsEditForm(BatchJobExecutionParamsRepository batchJobExecutionParamsRepository,
            BatchJobExecutionParamsGraphLoader batchJobExecutionParamsGraphLoader) {
        super(batchJobExecutionParamsRepository, batchJobExecutionParamsGraphLoader);
    }

    /**
     * The entity to edit/view.
     */
    public BatchJobExecutionParams getBatchJobExecutionParams() {
        return getEntity();
    }

    public String print() {
        return batchJobExecutionParamsController.print(getBatchJobExecutionParams());
    }

    @PostConstruct
    void setupBatchJobExecutionActions() {
        batchJobExecution = new GenericToOneAssociation<BatchJobExecution, Long>(batchJobExecutionController, BatchJobExecutionParams_.batchJobExecution) {
            @Override
            protected BatchJobExecution get() {
                return getBatchJobExecutionParams().getBatchJobExecution();
            }

            @Override
            protected void set(BatchJobExecution batchJobExecution) {
                getBatchJobExecutionParams().setBatchJobExecution(batchJobExecution);
            }

            @NotNull
            @Override
            public BatchJobExecution getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<BatchJobExecution, Long> getBatchJobExecution() {
        return batchJobExecution;
    }
}
