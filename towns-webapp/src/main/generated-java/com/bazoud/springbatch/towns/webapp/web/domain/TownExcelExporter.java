/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/ExcelExporter.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import javax.inject.Inject;
import javax.inject.Named;

import com.bazoud.springbatch.towns.webapp.domain.Town;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericExcelExporter;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * Exports to excel document {@link Town} search criteria and result. 
 */
@Named
@ConversationContextScoped
public class TownExcelExporter extends GenericExcelExporter<Town> {
    @Inject
    protected TownSearchForm sf;

    public TownExcelExporter() {
        super("town_id", "town_department", "town_name", "town_nameReal", "town_postcode", "town_population");
    }

    @Override
    protected void fillResultItem(int row, Town item) {
        int col = 0;
        setValue(row, col++, item.getId());
        setValue(row, col++, item.getDepartment());
        setValue(row, col++, item.getName());
        setValue(row, col++, item.getNameReal());
        setValue(row, col++, item.getPostcode());
        setValue(row, col++, item.getPopulation());
    }

    @Override
    public void fillSearchCriteria(int row) {
        useCriteriaSheet();

        setLeftHeader(row, 0, "town_id");
        setValue(row++, 1, sf.getTown().getId());
        setSelector(row++, 0, "town_department", sf.getDepartmentSelector());
        setSelector(row++, 0, "town_name", sf.getNameSelector());
        setSelector(row++, 0, "town_nameReal", sf.getNameRealSelector());
        setSelector(row++, 0, "town_postcode", sf.getPostcodeSelector());
        setRangeNumber(row++, 0, "town_population", sf.getPopulationRange());
        setRangeNumber(row++, 0, "town_area", sf.getAreaRange());
        setSelector(row++, 0, "town_longitudeDeg", sf.getLongitudeDegSelector());
        setSelector(row++, 0, "town_latitudeDeg", sf.getLatitudeDegSelector());
        setSelector(row++, 0, "town_longitudeGrd", sf.getLongitudeGrdSelector());
        setSelector(row++, 0, "town_latitudeGrd", sf.getLatitudeGrdSelector());
        setSelector(row++, 0, "town_longitudeDms", sf.getLongitudeDmsSelector());
        setSelector(row++, 0, "town_latitudeDms", sf.getLatitudeDmsSelector());
        setRangeNumber(row++, 0, "town_zmin", sf.getZminRange());
        setRangeNumber(row++, 0, "town_zmax", sf.getZmaxRange());
    }
}