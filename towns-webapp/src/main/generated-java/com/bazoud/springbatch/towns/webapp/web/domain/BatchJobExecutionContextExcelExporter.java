/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/ExcelExporter.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import javax.inject.Inject;
import javax.inject.Named;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionContext;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericExcelExporter;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * Exports to excel document {@link BatchJobExecutionContext} search criteria and result. 
 */
@Named
@ConversationContextScoped
public class BatchJobExecutionContextExcelExporter extends GenericExcelExporter<BatchJobExecutionContext> {
    @Inject
    protected BatchJobExecutionContextSearchForm sf;

    public BatchJobExecutionContextExcelExporter() {
        super("batchJobExecutionContext_shortContext", "batchJobExecutionContext_serializedContext");
    }

    @Override
    protected void fillResultItem(int row, BatchJobExecutionContext item) {
        int col = 0;
        setValue(row, col++, item.getShortContext());
        setValue(row, col++, item.getSerializedContext());
    }

    @Override
    public void fillSearchCriteria(int row) {
        useCriteriaSheet();

        setSelectedEntities(row++, 0, "batchJobExecutionContext_batchJobExecution", sf.getBatchJobExecutionSelector().getSelected());
        setSelector(row++, 0, "batchJobExecutionContext_shortContext", sf.getShortContextSelector());
        setSelector(row++, 0, "batchJobExecutionContext_serializedContext", sf.getSerializedContextSelector());
    }
}