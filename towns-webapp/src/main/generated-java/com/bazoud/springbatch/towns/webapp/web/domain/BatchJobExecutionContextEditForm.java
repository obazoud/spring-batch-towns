/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionContext;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionContext_;
import com.bazoud.springbatch.towns.webapp.repository.BatchJobExecutionContextRepository;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericEditForm;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericToOneAssociation;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * View Helper/Controller to edit {@link BatchJobExecutionContext}.
 */
@Named
@ConversationContextScoped
public class BatchJobExecutionContextEditForm extends GenericEditForm<BatchJobExecutionContext, Long> {
    @Inject
    protected BatchJobExecutionContextController batchJobExecutionContextController;
    @Inject
    protected BatchJobExecutionController batchJobExecutionController;
    protected GenericToOneAssociation<BatchJobExecution, Long> batchJobExecution;

    @Inject
    public BatchJobExecutionContextEditForm(BatchJobExecutionContextRepository batchJobExecutionContextRepository,
            BatchJobExecutionContextGraphLoader batchJobExecutionContextGraphLoader) {
        super(batchJobExecutionContextRepository, batchJobExecutionContextGraphLoader);
    }

    /**
     * The entity to edit/view.
     */
    public BatchJobExecutionContext getBatchJobExecutionContext() {
        return getEntity();
    }

    public String print() {
        return batchJobExecutionContextController.print(getBatchJobExecutionContext());
    }

    @PostConstruct
    void setupBatchJobExecutionActions() {
        batchJobExecution = new GenericToOneAssociation<BatchJobExecution, Long>(batchJobExecutionController, BatchJobExecutionContext_.batchJobExecution) {
            @Override
            protected BatchJobExecution get() {
                return getBatchJobExecutionContext().getBatchJobExecution();
            }

            @Override
            protected void set(BatchJobExecution batchJobExecution) {
                getBatchJobExecutionContext().setBatchJobExecution(batchJobExecution);
            }

            @NotNull
            @Override
            public BatchJobExecution getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<BatchJobExecution, Long> getBatchJobExecution() {
        return batchJobExecution;
    }
}
