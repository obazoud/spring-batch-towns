/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution_;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobInstance;
import com.bazoud.springbatch.towns.webapp.repository.BatchJobExecutionRepository;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericEditForm;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericToOneAssociation;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * View Helper/Controller to edit {@link BatchJobExecution}.
 */
@Named
@ConversationContextScoped
public class BatchJobExecutionEditForm extends GenericEditForm<BatchJobExecution, Long> {
    @Inject
    protected BatchJobExecutionController batchJobExecutionController;
    @Inject
    protected BatchJobInstanceController batchJobInstanceController;
    protected GenericToOneAssociation<BatchJobInstance, Long> jobInstance;

    @Inject
    public BatchJobExecutionEditForm(BatchJobExecutionRepository batchJobExecutionRepository, BatchJobExecutionGraphLoader batchJobExecutionGraphLoader) {
        super(batchJobExecutionRepository, batchJobExecutionGraphLoader);
    }

    /**
     * The entity to edit/view.
     */
    public BatchJobExecution getBatchJobExecution() {
        return getEntity();
    }

    public String print() {
        return batchJobExecutionController.print(getBatchJobExecution());
    }

    @PostConstruct
    void setupJobInstanceActions() {
        jobInstance = new GenericToOneAssociation<BatchJobInstance, Long>(batchJobInstanceController, BatchJobExecution_.jobInstance) {
            @Override
            protected BatchJobInstance get() {
                return getBatchJobExecution().getJobInstance();
            }

            @Override
            protected void set(BatchJobInstance batchJobInstance) {
                getBatchJobExecution().setJobInstance(batchJobInstance);
            }

            @NotNull
            @Override
            public BatchJobInstance getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<BatchJobInstance, Long> getJobInstance() {
        return jobInstance;
    }
}
