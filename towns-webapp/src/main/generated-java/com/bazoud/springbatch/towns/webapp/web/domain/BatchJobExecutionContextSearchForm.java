/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.bazoud.springbatch.towns.webapp.web.domain;

import static com.bazoud.springbatch.towns.webapp.repository.support.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecution;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionContext;
import com.bazoud.springbatch.towns.webapp.domain.BatchJobExecutionContext_;
import com.bazoud.springbatch.towns.webapp.repository.support.PropertySelector;
import com.bazoud.springbatch.towns.webapp.repository.support.SearchParameters;
import com.bazoud.springbatch.towns.webapp.web.domain.support.GenericSearchForm;
import com.bazoud.springbatch.towns.webapp.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link BatchJobExecutionContext}.
 * It exposes a {@link BatchJobExecutionContext} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class BatchJobExecutionContextSearchForm extends GenericSearchForm<BatchJobExecutionContext, Long, BatchJobExecutionContextSearchForm> {
    private static final long serialVersionUID = 1L;
    protected BatchJobExecutionContext batchJobExecutionContext = new BatchJobExecutionContext();
    protected PropertySelector<BatchJobExecutionContext, Long> idSelector = newPropertySelector(BatchJobExecutionContext_.id);
    protected PropertySelector<BatchJobExecutionContext, String> shortContextSelector = newPropertySelector(BatchJobExecutionContext_.shortContext);
    protected PropertySelector<BatchJobExecutionContext, String> serializedContextSelector = newPropertySelector(BatchJobExecutionContext_.serializedContext);
    protected PropertySelector<BatchJobExecutionContext, BatchJobExecution> batchJobExecutionSelector = newPropertySelector(BatchJobExecutionContext_.batchJobExecution);

    public BatchJobExecutionContext getBatchJobExecutionContext() {
        return batchJobExecutionContext;
    }

    @Override
    protected BatchJobExecutionContext getEntity() {
        return getBatchJobExecutionContext();
    }

    @Override
    public BatchJobExecutionContextSearchForm newInstance() {
        return new BatchJobExecutionContextSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(idSelector, shortContextSelector, serializedContextSelector);
        sp.property(batchJobExecutionSelector);
        return sp;
    }

    @Override
    public void resetWithOther(BatchJobExecutionContextSearchForm other) {
        this.batchJobExecutionContext = other.getBatchJobExecutionContext();
        this.idSelector = other.getIdSelector();
        this.shortContextSelector = other.getShortContextSelector();
        this.serializedContextSelector = other.getSerializedContextSelector();
        this.batchJobExecutionSelector = other.getBatchJobExecutionSelector();
    }

    // Property selectors
    public PropertySelector<BatchJobExecutionContext, Long> getIdSelector() {
        return idSelector;
    }

    public PropertySelector<BatchJobExecutionContext, String> getShortContextSelector() {
        return shortContextSelector;
    }

    public PropertySelector<BatchJobExecutionContext, String> getSerializedContextSelector() {
        return serializedContextSelector;
    }

    // Relation selectors
    public PropertySelector<BatchJobExecutionContext, BatchJobExecution> getBatchJobExecutionSelector() {
        return batchJobExecutionSelector;
    }
}
